apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    plugin-plane: fabric-plugin
  name: eno-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: connectionpoints.eno.k8s.io
spec:
  group: eno.k8s.io
  names:
    kind: ConnectionPoint
    listKind: ConnectionPointList
    plural: connectionpoints
    singular: connectionpoint
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ConnectionPoint is the Schema for the connectionpoints API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ConnectionPointSpec defines the desired state of ConnectionPoint
          properties:
            Description:
              type: string
            SupportedCnis:
              items:
                properties:
                  Name:
                    type: string
                  Opts:
                    type: string
                  SupportedInterfaceTypes:
                    items:
                      type: string
                    minItems: 1
                    type: array
                required:
                - Name
                - SupportedInterfaceTypes
                type: object
              minItems: 1
              type: array
          required:
          - SupportedCnis
          type: object
        status:
          description: ConnectionPointStatus defines the observed state of ConnectionPoint
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: l2bridgedomains.eno.k8s.io
spec:
  group: eno.k8s.io
  names:
    kind: L2BridgeDomain
    listKind: L2BridgeDomainList
    plural: l2bridgedomains
    singular: l2bridgedomain
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: L2BridgeDomain is the Schema for the l2bridgedomains API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: L2BridgeDomainSpec defines the desired state of L2BridgeDomain
          properties:
            ConnectionPoints:
              items:
                type: string
              type: array
            Vlan:
              maximum: 4094
              minimum: 1
              type: integer
          required:
          - Vlan
          type: object
        status:
          description: L2BridgeDomainStatus defines the observed state of L2BridgeDomain
          properties:
            Message:
              type: string
            Phase:
              enum:
              - pending
              - ready
              - error
              - terminating
              - deleted
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: l2serviceattachments.eno.k8s.io
spec:
  group: eno.k8s.io
  names:
    kind: L2ServiceAttachment
    listKind: L2ServiceAttachmentList
    plural: l2serviceattachments
    singular: l2serviceattachment
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: L2ServiceAttachment is the Schema for the l2serviceattachments
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: L2ServiceAttachmentSpec defines the desired state of L2ServiceAttachment
          properties:
            ConnectionPoint:
              type: string
            Implementation:
              enum:
              - ovs
              - host-device
              type: string
            L2Services:
              items:
                type: string
              minItems: 1
              type: array
            PodInterfaceType:
              enum:
              - kernel
              - dpdk
              type: string
            VlanType:
              enum:
              - trunk
              - access
              - selectivetrunk
              type: string
          required:
          - ConnectionPoint
          - L2Services
          - VlanType
          type: object
        status:
          description: L2ServiceAttachmentStatus defines the observed state of L2ServiceAttachment
          properties:
            Message:
              type: string
            Phase:
              enum:
              - pending
              - ready
              - error
              - terminating
              - deleted
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: l2services.eno.k8s.io
spec:
  group: eno.k8s.io
  names:
    kind: L2Service
    listKind: L2ServiceList
    plural: l2services
    singular: l2service
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: L2Service is the Schema for the l2services API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: L2ServiceSpec defines the desired state of L2Service
          properties:
            SegmentationID:
              maximum: 4094
              minimum: 1
              type: integer
            Subnets:
              items:
                type: string
              maxItems: 2
              type: array
          required:
          - SegmentationID
          type: object
        status:
          description: L2ServiceStatus defines the observed state of L2Service
          properties:
            ConnectionPoints:
              items:
                type: string
              type: array
            Message:
              type: string
            Phase:
              enum:
              - pending
              - ready
              - error
              - terminating
              - deleted
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: routes.eno.k8s.io
spec:
  group: eno.k8s.io
  names:
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Route is the Schema for the routes API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RouteSpec defines the desired state of Route
          properties:
            Mask:
              type: integer
            NextHop:
              type: string
            Prefix:
              type: string
          required:
          - Mask
          - NextHop
          - Prefix
          type: object
        status:
          description: RouteStatus defines the observed state of Route
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: subnets.eno.k8s.io
spec:
  group: eno.k8s.io
  names:
    kind: Subnet
    listKind: SubnetList
    plural: subnets
    singular: subnet
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Subnet is the Schema for the subnets API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SubnetSpec defines the desired state of Subnet
          properties:
            Address:
              type: string
            AllocationPool:
              items:
                description: IPPool contains an ip range
                properties:
                  End:
                    type: string
                  Start:
                    type: string
                required:
                - End
                - Start
                type: object
              type: array
            Dns:
              description: SubnetDNS contains DNS configurations
              properties:
                Domain:
                  type: string
                Nameservers:
                  items:
                    type: string
                  type: array
                Search:
                  items:
                    type: string
                  type: array
              type: object
            Ipam:
              enum:
              - whereabouts
              type: string
            Mask:
              type: integer
            Routes:
              items:
                type: string
              type: array
            Type:
              enum:
              - v4
              - v6
              type: string
          required:
          - Address
          - Ipam
          - Mask
          - Type
          type: object
        status:
          description: SubnetStatus defines the observed state of Subnet
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eno-leader-election-role
  namespace: eno-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: eno-manager-role
rules:
- apiGroups:
  - eno.k8s.io
  resources:
  - connectionpoints
  - l2services
  - routes
  - subnets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - eno.k8s.io
  resources:
  - l2bridgedomains
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - eno.k8s.io
  resources:
  - l2serviceattachments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - eno.k8s.io
  resources:
  - l2serviceattachments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - eno.k8s.io
  resources:
  - l2services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - eno.k8s.io
  resources:
  - l2services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - k8s.cni.cncf.io
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eno-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: eno-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eno-leader-election-rolebinding
  namespace: eno-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eno-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: eno-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eno-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eno-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: eno-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eno-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eno-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: eno-system
---
apiVersion: v1
data:
  config.yaml: |
    UseFabricPlugin: true
kind: ConfigMap
metadata:
  name: eno-config
  namespace: eno-system
---
apiVersion: v1
data:
  tls.crt: TLS_CRT
  tls.key: TLS_KEY
kind: Secret
metadata:
  name: eno-webhook-server-cert
  namespace: eno-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: eno-controller-manager-metrics-service
  namespace: eno-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: eno-webhook-service
  namespace: eno-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: eno-controller-manager
  namespace: eno-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: eno-controller:latest
        imagePullPolicy: Never
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /etc/eno
          name: eno-config
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: eno-webhook-server-cert
      - configMap:
          name: eno-config
        name: eno-config
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: eno-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: CA_BUNDLE
    service:
      name: eno-webhook-service
      namespace: eno-system
      path: /validate-eno-k8s-io-v1alpha1-l2service
  failurePolicy: Fail
  name: vl2service.kb.io
  rules:
  - apiGroups:
    - eno.k8s.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - l2services
